{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AEl_d\\\\Downloads\\\\home_craft\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI as api } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user info\n      fetchUserInfo();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserInfo = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      if (response.data && response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      } else {\n        throw new Error('Failed to fetch user information');\n      }\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n      // لا تقم بتسجيل الخروج تلقائياً، فقط أظهر حالة غير مصادق\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data && response.data.success) {\n        const {\n          token,\n          data: userData\n        } = response.data;\n        localStorage.setItem('token', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        var _response$data;\n        throw new Error(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.error) || 'Login failed');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'فشل تسجيل الدخول. يرجى التحقق من البيانات والمحاولة مرة أخرى.');\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data && response.data.success) {\n        const {\n          token,\n          data: userData\n        } = response.data;\n        localStorage.setItem('token', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        var _response$data2;\n        throw new Error(((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.error) || 'Registration failed');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'فشل إنشاء الحساب. يرجى التحقق من البيانات والمحاولة مرة أخرى.');\n    }\n  };\n  const loginWithGoogle = async () => {\n    try {\n      // حفظ الصفحة الحالية للعودة إليها بعد المصادقة\n      const currentPath = window.location.pathname + window.location.search;\n      sessionStorage.setItem('preAuthPath', currentPath);\n\n      // توجيه المستخدم إلى صفحة مصادقة Google في الخلفية\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      window.location.href = `${apiUrl}/api/auth/google`;\n    } catch (error) {\n      console.error('Google login error:', error);\n      throw new Error('فشل تسجيل الدخول باستخدام Google');\n    }\n  };\n  const handleGoogleCallback = async () => {\n    try {\n      // بعد العودة من Google، جلب معلومات المستخدم\n      await fetchUserInfo();\n\n      // العودة إلى الصفحة السابقة أو الصفحة الرئيسية\n      const preAuthPath = sessionStorage.getItem('preAuthPath');\n      sessionStorage.removeItem('preAuthPath');\n      return preAuthPath || '/dashboard';\n    } catch (error) {\n      console.error('Google callback error:', error);\n      throw new Error('فشل معالجة استجابة Google');\n    }\n  };\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    return !!token && isAuthenticated;\n  };\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n  const logout = () => {\n    // مسح البيانات المحلية\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('preAuthPath');\n\n    // تحديث حالة التطبيق\n    setUser(null);\n    setIsAuthenticated(false);\n\n    // إعادة التوجيه إلى الصفحة الرئيسية\n    window.location.href = '/';\n  };\n  const updateUser = userData => {\n    setUser(prevUser => ({\n      ...prevUser,\n      ...userData\n    }));\n  };\n  const refreshUserData = async () => {\n    try {\n      await fetchUserInfo();\n    } catch (error) {\n      console.error('Error refreshing user data:', error);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    loginWithGoogle,\n    handleGoogleCallback,\n    checkAuthStatus,\n    getToken,\n    logout,\n    updateUser,\n    refreshUserData\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","fetchUserInfo","response","get","data","success","error","console","login","email","password","post","userData","setItem","_response$data","_error$response","_error$response$data","register","_response$data2","_error$response2","_error$response2$data","loginWithGoogle","currentPath","window","location","pathname","search","sessionStorage","apiUrl","process","env","REACT_APP_API_URL","href","handleGoogleCallback","preAuthPath","removeItem","checkAuthStatus","getToken","logout","updateUser","prevUser","refreshUserData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AEl_d/Downloads/home_craft/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI as api } from '../utils/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user info\n      fetchUserInfo();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUserInfo = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      if (response.data && response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      } else {\n        throw new Error('Failed to fetch user information');\n      }\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n      // لا تقم بتسجيل الخروج تلقائياً، فقط أظهر حالة غير مصادق\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      \n      if (response.data && response.data.success) {\n        const { token, data: userData } = response.data;\n        \n        localStorage.setItem('token', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        \n        return { success: true, user: userData };\n      } else {\n        throw new Error(response.data?.error || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error(error.response?.data?.error || 'فشل تسجيل الدخول. يرجى التحقق من البيانات والمحاولة مرة أخرى.');\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      \n      if (response.data && response.data.success) {\n        const { token, data: userData } = response.data;\n        \n        localStorage.setItem('token', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        \n        return { success: true, user: userData };\n      } else {\n        throw new Error(response.data?.error || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw new Error(error.response?.data?.error || 'فشل إنشاء الحساب. يرجى التحقق من البيانات والمحاولة مرة أخرى.');\n    }\n  };\n\n  const loginWithGoogle = async () => {\n    try {\n      // حفظ الصفحة الحالية للعودة إليها بعد المصادقة\n      const currentPath = window.location.pathname + window.location.search;\n      sessionStorage.setItem('preAuthPath', currentPath);\n      \n      // توجيه المستخدم إلى صفحة مصادقة Google في الخلفية\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      window.location.href = `${apiUrl}/api/auth/google`;\n    } catch (error) {\n      console.error('Google login error:', error);\n      throw new Error('فشل تسجيل الدخول باستخدام Google');\n    }\n  };\n\n  const handleGoogleCallback = async () => {\n    try {\n      // بعد العودة من Google، جلب معلومات المستخدم\n      await fetchUserInfo();\n      \n      // العودة إلى الصفحة السابقة أو الصفحة الرئيسية\n      const preAuthPath = sessionStorage.getItem('preAuthPath');\n      sessionStorage.removeItem('preAuthPath');\n      \n      return preAuthPath || '/dashboard';\n    } catch (error) {\n      console.error('Google callback error:', error);\n      throw new Error('فشل معالجة استجابة Google');\n    }\n  };\n\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    return !!token && isAuthenticated;\n  };\n\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  const logout = () => {\n    // مسح البيانات المحلية\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('preAuthPath');\n    \n    // تحديث حالة التطبيق\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    // إعادة التوجيه إلى الصفحة الرئيسية\n    window.location.href = '/';\n  };\n\n  const updateUser = (userData) => {\n    setUser(prevUser => ({ ...prevUser, ...userData }));\n  };\n\n  const refreshUserData = async () => {\n    try {\n      await fetchUserInfo();\n    } catch (error) {\n      console.error('Error refreshing user data:', error);\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    loginWithGoogle,\n    handleGoogleCallback,\n    checkAuthStatus,\n    getToken,\n    logout,\n    updateUser,\n    refreshUserData\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}