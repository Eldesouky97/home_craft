{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AEl_d\\\\Downloads\\\\home_craft\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI as api } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user info\n      fetchUserInfo();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserInfo = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const loginWithGoogle = async () => {\n    try {\n      // حفظ الصفحة الحالية للعودة إليها بعد المصادقة\n      const currentPath = window.location.pathname + window.location.search;\n      sessionStorage.setItem('preAuthPath', currentPath);\n\n      // توجيه المستخدم إلى صفحة مصادقة Google في الخلفية\n      window.location.href = `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/google`;\n    } catch (error) {\n      console.error('Google login error:', error);\n      throw error;\n    }\n  };\n  const handleGoogleCallback = async () => {\n    try {\n      // بعد العودة من Google، جلب معلومات المستخدم\n      await fetchUserInfo();\n\n      // العودة إلى الصفحة السابقة أو الصفحة الرئيسية\n      const preAuthPath = sessionStorage.getItem('preAuthPath');\n      sessionStorage.removeItem('preAuthPath');\n      return preAuthPath || '/dashboard';\n    } catch (error) {\n      console.error('Google callback error:', error);\n      throw error;\n    }\n  };\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  };\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n\n    // إعادة التوجيه إلى الصفحة الرئيسية\n    window.location.href = '/';\n  };\n  const updateUser = userData => {\n    setUser({\n      ...user,\n      ...userData\n    });\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    loginWithGoogle,\n    handleGoogleCallback,\n    checkAuthStatus,\n    getToken,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","fetchUserInfo","response","get","data","error","console","logout","login","email","password","post","setItem","register","userData","loginWithGoogle","currentPath","window","location","pathname","search","sessionStorage","href","process","env","REACT_APP_API_URL","handleGoogleCallback","preAuthPath","removeItem","checkAuthStatus","getToken","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AEl_d/Downloads/home_craft/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI as api } from '../utils/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user info\n      fetchUserInfo();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUserInfo = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      const { token, user } = response.data;\n      \n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsAuthenticated(true);\n      \n      return true;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const { token, user } = response.data;\n      \n      localStorage.setItem('token', token);\n      setUser(user);\n      setIsAuthenticated(true);\n      \n      return true;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const loginWithGoogle = async () => {\n    try {\n      // حفظ الصفحة الحالية للعودة إليها بعد المصادقة\n      const currentPath = window.location.pathname + window.location.search;\n      sessionStorage.setItem('preAuthPath', currentPath);\n      \n      // توجيه المستخدم إلى صفحة مصادقة Google في الخلفية\n      window.location.href = `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/google`;\n    } catch (error) {\n      console.error('Google login error:', error);\n      throw error;\n    }\n  };\n\n  const handleGoogleCallback = async () => {\n    try {\n      // بعد العودة من Google، جلب معلومات المستخدم\n      await fetchUserInfo();\n      \n      // العودة إلى الصفحة السابقة أو الصفحة الرئيسية\n      const preAuthPath = sessionStorage.getItem('preAuthPath');\n      sessionStorage.removeItem('preAuthPath');\n      \n      return preAuthPath || '/dashboard';\n    } catch (error) {\n      console.error('Google callback error:', error);\n      throw error;\n    }\n  };\n\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  };\n\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    // إعادة التوجيه إلى الصفحة الرئيسية\n    window.location.href = '/';\n  };\n\n  const updateUser = (userData) => {\n    setUser({ ...user, ...userData });\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    loginWithGoogle,\n    handleGoogleCallback,\n    checkAuthStatus,\n    getToken,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}